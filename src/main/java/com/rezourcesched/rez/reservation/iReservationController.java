package com.rezourcesched.rez.reservation;

import java.util.Date;
import java.util.List;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.rezourcesched.rez.entity.Person;
import com.rezourcesched.rez.entity.Reservation;
import io.swagger.v3.oas.annotations.OpenAPIDefinition;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.info.Info;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.servers.Server;

@RequestMapping("/reservation")
@OpenAPIDefinition(info = @Info(title = "Rezource Scheduler"), servers = {@Server(url = "http://localhost:8080", description = "Local server")})
public interface iReservationController {
  @Operation(
      summary = "Returns a list of Reservations",
      description = "Returns a list of Reservations given a resourceId or a schedulerId or a date range",
      responses = {
          @ApiResponse(
              responseCode = "200", 
              description = "A list of Reservations is returned", 
              content = @Content(mediaType = "application/json", 
              schema = @Schema(implementation = Person.class))),
          @ApiResponse(
              responseCode = "400", 
              description = "The request parameters are invalid", 
              content = @Content(mediaType = "application/json")),
          @ApiResponse(
              responseCode = "404", 
              description = "No Rezervations were found with the input criteria", 
              content = @Content(mediaType = "application/json")),
          @ApiResponse(
              responseCode = "500", 
              description = "An unplanned error occurred", 
              content = @Content(mediaType = "application/json"))
      },
      parameters = {
          @Parameter(
              name = "reservationId", 
              allowEmptyValue = false, 
              required = false, 
              description = "The unique key id given to the reservation generated by the database"),
          @Parameter(
              name = "rezourceId", 
              allowEmptyValue = false, 
              required = false, 
              description = "The unique key id given to the rezource generated by the database"),
          @Parameter(
              name = "schedulerId", 
              allowEmptyValue = false, 
              required = false, 
              description = "The unique key id given to the person generated by the database"),
          @Parameter(
              name = "dateFrom", 
              allowEmptyValue = false, 
              required = false, 
              description = "Beginning date of reservation"),
          @Parameter(
              name = "dateTo", 
              allowEmptyValue = false, 
              required = false, 
              description = "Ending date of reservation")
      })
      @GetMapping
      @ResponseStatus(code = HttpStatus.OK)
      List<Reservation> fetchReservation(
          @RequestParam(required = false) Long reservationId, 
          @RequestParam(required = false) Long rezourceId, 
          @RequestParam(required = false) Long schedulerId,
          @RequestParam(required = false) Date dateFrom,
          @RequestParam(required = false) Date dateTo);
  
  @Operation(
      summary = "Create a Reservation",
      description = "Create a new reservation between a scheduler and a rezource",
      responses = {
          @ApiResponse(
              responseCode = "201", 
              description = "Reservation Created", 
              content = @Content(mediaType = "application/json", 
              schema = @Schema(implementation = Reservation.class))),
          @ApiResponse(
              responseCode = "400", 
              description = "The request parameters are invalid", 
              content = @Content(mediaType = "application/json")),
          @ApiResponse(
              responseCode = "500", 
              description = "An unplanned error occurred", 
              content = @Content(mediaType = "application/json"))
      },
      parameters = {
          @Parameter(
              name = "reservation", 
              allowEmptyValue = false, 
              required = true, 
              description = "JSON body of a reservation")
      }
      
  )
   
  @PostMapping
  @ResponseStatus(code = HttpStatus.CREATED)
  Reservation createReservation(
      @RequestBody(required = true) Reservation reservation);
}
